services:
  #mongo:
  #  image: mongo:7.0
  #  command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
  #  ports:
  #    - 27017:27017
  #  extra_hosts:
  #    - "host.docker.internal:host-gateway"
  #  healthcheck:
  #    test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 --quiet
  #    interval: 5s
  #    timeout: 30s
  #    start_period: 0s
  #    start_interval: 1s
  #    retries: 30

  api:
    #depends_on:
    #  - mongo
    image: chat-api
    build: ../services_docker/dockerfiles/api_service.Dockerfile
    ports:
      - 8080:8080
  presence:
    depends_on:
      - nats
    image: chat-presence
    build: ../services_docker/dockerfiles/service_service.Dockerfile
  upload:
    #depends_on:
    #  - mongo
    image: chat-upload
    build: ../services_docker/dockerfiles/upload_service.Dockerfile
    ports:
      - 8081:8080
  ws:
    depends_on:
      #- mongo
      - presence
      - nats
    image: chat-ws
    build: ../services_docker/dockerfiles/ws_service.Dockerfile
    ports:
      - 8082:8080
  nats:
    image: nats:latest
    command: --user admin --pass admin
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222